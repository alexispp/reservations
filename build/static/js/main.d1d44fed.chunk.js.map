{"version":3,"sources":["api/api.js","api/ceremony.js","api/reservation.js","store/login/login-action-types.js","store/login/loginActions.js","components/AdminView/AdminView.js","components/ReservationView/ReservationView.js","components/privateRoute.js","hooks/auth.js","App.js","reportWebVitals.js","store/utils.js","store/login/loginReducer.js","store/store.js","index.js"],"names":["API","axios","create","baseURL","process","headers","getCeremonies","a","get","response","console","log","addCeremony","ceremony","post","getLastCeremony","getAvailableTimes","id","getReservations","ceremonyId","addReservation","reservation","SIGN_IN_REQUEST","SIGN_IN_SUCCESS","SIGN_IN_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","SIGN_OUT_REQUEST","SIGN_OUT_SUCCESS","SIGN_OUT_FAILURE","signInRequest","type","signInSuccess","token","payload","signOut","history","dispatch","localStorage","clear","push","getItem","NewCeremonyDialog","open","handleClose","ceremonyTimes","Dialog","onClose","aria-labelledby","DialogTitle","initialValues","name","date","numberOfAssistants","timeOptions","onSubmit","values","actions","ceremonyApi","props","DialogContent","className","TextField","label","value","onChange","handleChange","fullWidth","utils","MomentUtils","DatePicker","format","val","setFieldValue","clearable","autoOk","disablePast","disableToolbar","error","touched","email","Boolean","errors","helperText","render","arrayHelpers","FormControl","component","FormLabel","FormGroup","map","time","FormControlLabel","control","Checkbox","color","e","target","checked","remove","form","reduce","acc","obj","index","labelPlacement","DialogActions","Button","onClick","submitForm","AdminView","useDispatch","useHistory","useState","page","setPage","rowsPerPage","setRowsPerPage","openNewReservation","setOpenNewReservation","ceremonies","setCeremonies","reservations","setReservations","useCallback","cer","reservationApi","useEffect","resultCeremonies","data","onClickCeremony","resultReservations","StyledTableCell","withStyles","theme","head","backgroundColor","palette","common","black","white","body","fontSize","TableCell","StyledTableRow","root","action","hover","TableRow","Paper","Fab","aria-label","GridList","GridListTile","Typography","variant","moment","JSON","stringify","replaceAll","replace","TableContainer","Table","stickyHeader","TableHead","align","TableBody","slice","row","scope","TablePagination","rowsPerPageOptions","count","length","onChangePage","event","newPage","onChangeRowsPerPage","parseInt","ColorButton","border","paddingBlock","paddingInline","margin","fontWeight","backdropFilter","width","CssTextField","transform","borderBottom","borderBottomColor","LoginDialog","useSelector","state","authentication","username","setUserName","password","setPassword","autoFocus","method","url","Authorization","setItem","signIn","ReservationView","openLogin","setOpenLogin","addName","setAddName","setName","setTime","reservationSaved","setReservationSaved","setCeremony","availableTimes","setAvailableTimes","saveResponse","setSaveResponse","times","lastCeremony","Alert","elevation","_","reason","confirmReservation","timeStamp","result","setTimeout","window","location","reload","message","severity","Box","split","element","disabled","available","timeSelected","style","Link","href","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","UserRoute","path","rest","currentUser","exact","to","REACT_APP_BASE_URL","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","isValidToken","decoded","jwt","decode","Date","exp","initState","loading","isAuthenticated","authenticationReducer","user","removeItem","createRootReducer","combineReducers","store","initialState","composeEnhancers","compose","middlewares","thunk","createStore","applyMiddleware","makeStore","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d1d44fed.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\n// const requestHandler = (req) => {\r\n//   return req;\r\n// };\r\n\r\n// const responseHandler = (res) => {\r\n//   return res ? res.data : res;\r\n// };\r\n\r\n// const responseErrorHandler = (err) => {\r\n//   return Promise.reject(err);\r\n// };\r\n\r\nexport let API = axios.create({\r\n  baseURL: process.env.REACT_APP_API_URL,\r\n  headers: {\r\n    \"Content-Type\": \"application/json\",\r\n    //   Authorization: `Bearer ${token}`,\r\n    \"Access-Control-Allow-Origin\": \"*\",\r\n  },\r\n});\r\n\r\n// export const setAPI = (token) => {\r\n//   API = axios.create({\r\n//     baseURL: 'http://localhost:3000',\r\n//     headers: {\r\n//       'Content-Type': 'application/json',\r\n//     //   Authorization: `Bearer ${token}`,\r\n//     },\r\n//   });\r\n\r\n//   API.interceptors.request.use(requestHandler);\r\n//   API.interceptors.response.use(responseHandler, responseErrorHandler);\r\n// };\r\n","import { API } from \"./api\";\r\n\r\nexport const getCeremonies = async () => {\r\n  try {\r\n    const response = await API.get(`/ceremony`);\r\n    return response;\r\n  } catch (error) {\r\n    console.log(error);\r\n    return [];\r\n  }\r\n};\r\n\r\nexport const addCeremony = async (ceremony) => {\r\n  try {\r\n    const response = await API.post(`/ceremony`, ceremony);\r\n    return response;\r\n  } catch (error) {\r\n    console.log(error);\r\n    return \"\";\r\n  }\r\n};\r\n\r\n\r\nexport const getLastCeremony = async ()=>{\r\n  try {\r\n    const response = await API.get(`/ceremony/lastCeremony`);\r\n    return response;\r\n  } catch (error) {\r\n    console.log(error);\r\n    return \"\";\r\n  }\r\n}\r\n\r\nexport const getAvailableTimes = async(id)=>{\r\n  try {\r\n    console.log(`/ceremony/${id}/availableTimes`)\r\n    const response = await API.get(`/ceremony/${id}/availableTimes`);\r\n    return response;\r\n  } catch (error) {\r\n    console.log(error);\r\n    return \"\";\r\n  }\r\n\r\n}","import { API } from \"./api\";\r\n\r\nexport const getReservations = async (ceremonyId) => {\r\n  try {\r\n    const response = await API.post(`/reservation/getAllByCeremony`, {ceremonyId});\r\n    return response;\r\n  } catch (error) {\r\n    console.log(error.response);\r\n    return [];\r\n  }\r\n};\r\n\r\nexport const addReservation = async (reservation) => {\r\n  try {\r\n    const response = await API.post(`/reservation`, reservation);\r\n    return response;\r\n  } catch (error) {\r\n    console.log(error.response);\r\n    return error.response;\r\n  }\r\n};\r\n","export const SIGN_IN_REQUEST = \"SIGN_IN_REQUEST\";\r\nexport const SIGN_IN_SUCCESS = \"SIGN_IN_SUCCESS\";\r\nexport const SIGN_IN_FAILURE = \"SIGN_IN_FAILURE\";\r\n\r\nexport const SIGN_UP_REQUEST = \"SIGN_UP_REQUEST\";\r\nexport const SIGN_UP_SUCCESS = \"SIGN_UP_SUCCESS\";\r\nexport const SIGN_UP_FAILURE = \"SIGN_UP_FAILURE\";\r\n\r\nexport const SIGN_OUT_REQUEST = \"SIGN_OUT_REQUEST\";\r\nexport const SIGN_OUT_SUCCESS = \"SIGN_OUT_SUCCESS\";\r\nexport const SIGN_OUT_FAILURE = \"SIGN_OUT_FAILURE\";","import axios from \"axios\";\r\n\r\nimport {\r\n  SIGN_IN_FAILURE,\r\n  SIGN_IN_REQUEST,\r\n  SIGN_IN_SUCCESS,\r\n  SIGN_UP_FAILURE,\r\n  SIGN_UP_REQUEST,\r\n  SIGN_UP_SUCCESS,\r\n  SIGN_OUT_FAILURE,\r\n  SIGN_OUT_REQUEST,\r\n  SIGN_OUT_SUCCESS,\r\n} from \"./login-action-types\";\r\n\r\n//Sign up action creators\r\nconst signUpRequest = () => {\r\n  return {\r\n    type: SIGN_UP_REQUEST,\r\n  };\r\n};\r\nconst signUpSuccess = (user) => {\r\n  return {\r\n    type: SIGN_UP_SUCCESS,\r\n    payload: {\r\n      user,\r\n    },\r\n  };\r\n};\r\nconst signUpFailure = (error) => {\r\n  return {\r\n    type: SIGN_UP_FAILURE,\r\n    payload: error,\r\n  };\r\n};\r\n\r\nexport const signUp = (user, history) => {\r\n  return async (dispatch) => {\r\n    dispatch(signUpRequest());\r\n    try {\r\n      const response = await axios({\r\n        method: \"post\",\r\n        url: \"/signUp\",\r\n        data: user,\r\n      });\r\n      const { data } = response.data;\r\n      dispatch(signUpSuccess(data));\r\n      history.push(\"/\");\r\n    } catch (error) {\r\n      console.log(error);\r\n      dispatch(signUpFailure(error));\r\n    }\r\n  };\r\n};\r\n\r\n//Sign in action creators\r\nconst signInRequest = () => {\r\n  return {\r\n    type: SIGN_IN_REQUEST,\r\n  };\r\n};\r\nconst signInSuccess = (token) => {\r\n  return {\r\n    type: SIGN_IN_SUCCESS,\r\n    payload: {\r\n      token,\r\n    },\r\n  };\r\n};\r\nconst signInFailure = (error) => {\r\n  return {\r\n    type: SIGN_IN_FAILURE,\r\n    payload: error,\r\n  };\r\n};\r\n\r\nexport const signIn = (payload, history) => {\r\n  return async (dispatch) => {\r\n    dispatch(signInRequest);\r\n\r\n    try {\r\n      const response = await axios({\r\n        method: \"post\",\r\n        url: \"http://localhost:3000/auth/signIn\",\r\n        data: payload,\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"USER-TOKEN\")}`,\r\n        },\r\n      });\r\n      const { token } = response.data;\r\n      localStorage.setItem(\"USER-TOKEN\", token);\r\n\r\n      dispatch(signInSuccess(token));\r\n      history.push(\"/admin\");\r\n    } catch (error) {\r\n      dispatch(signInFailure(error));\r\n    }\r\n  };\r\n};\r\n\r\n//sign out action creators\r\nexport const signOutRequest = function () {\r\n  return {\r\n    type: SIGN_OUT_REQUEST,\r\n  };\r\n};\r\n\r\nexport const signOutSuccess = function () {\r\n  return {\r\n    type: SIGN_OUT_SUCCESS,\r\n  };\r\n};\r\n\r\nexport const signOutFailure = function () {\r\n  return {\r\n    type: SIGN_OUT_FAILURE,\r\n  };\r\n};\r\n\r\nexport const signOut = function (history) {\r\n  return (dispatch) => {\r\n    dispatch(signOutRequest());\r\n    localStorage.clear();\r\n    history.push(\"/\");\r\n    if (localStorage.getItem(\"USER_TOKEN\")) {\r\n      dispatch(signOutFailure());\r\n    } else {\r\n      dispatch(signOutSuccess());\r\n    }\r\n  };\r\n};\r\n","import moment from \"moment\";\r\nimport React, { useState, useCallback, useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport {\r\n  Paper,\r\n  GridList,\r\n  GridListTile,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  TablePagination,\r\n  Fab,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  TextField,\r\n  DialogActions,\r\n  Button,\r\n  FormControl,\r\n  FormLabel,\r\n  FormGroup,\r\n  FormControlLabel,\r\n  Checkbox,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\n\r\nimport MomentUtils from \"@date-io/moment\";\r\nimport { MuiPickersUtilsProvider, DatePicker } from \"@material-ui/pickers\";\r\n\r\nimport { Form, Formik, FieldArray } from \"formik\";\r\n\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\n\r\nimport \"./AdminView.scss\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nimport * as ceremonyApi from \"../../api/ceremony\";\r\nimport * as reservationApi from \"../../api/reservation\";\r\n\r\nimport { signOut } from \"../../store/login/loginActions\";\r\n\r\nconst NewCeremonyDialog = ({ open, handleClose }) => {\r\n  const ceremonyTimes = [\r\n    \"09:00 HS\",\r\n    \"11:00 HS\",\r\n    \"15:00 HS\",\r\n    \"17:00 HS\",\r\n    \"19:00 HS\",\r\n  ];\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      onClose={handleClose}\r\n      aria-labelledby=\"form-dialog-title\"\r\n    >\r\n      <DialogTitle id=\"form-dialog-title\">Nueva Ceremonia</DialogTitle>\r\n      <Formik\r\n        initialValues={{\r\n          name: \"\",\r\n          date: null,\r\n          numberOfAssistants: \"\",\r\n          timeOptions: [],\r\n        }}\r\n        onSubmit={(values, actions) => {\r\n          ceremonyApi.addCeremony(values);\r\n          handleClose();\r\n        }}\r\n      >\r\n        {(props) => (\r\n          <DialogContent>\r\n            <DialogContent>\r\n              {/* <DialogContentText>\r\n            To subscribe to this website, please enter your email address here. We\r\n            will send updates occasionally.\r\n          </DialogContentText> */}\r\n\r\n              <Form className=\"Form\">\r\n                <TextField\r\n                  id=\"name\"\r\n                  name=\"name\"\r\n                  label=\"Ceremonia\"\r\n                  value={props.values.name}\r\n                  onChange={props.handleChange}\r\n                  fullWidth\r\n                />\r\n\r\n                <MuiPickersUtilsProvider utils={MomentUtils}>\r\n                  <DatePicker\r\n                    id=\"date\"\r\n                    name=\"date\"\r\n                    label=\"Fecha\"\r\n                    format=\"DD/MM/YYYY\"\r\n                    value={props.values.date}\r\n                    onChange={(val) => props.setFieldValue(\"date\", val)}\r\n                    clearable\r\n                    autoOk\r\n                    disablePast\r\n                    disableToolbar\r\n                  />\r\n                </MuiPickersUtilsProvider>\r\n\r\n                <TextField\r\n                  id=\"numberOfAssistants\"\r\n                  label=\"Asistentes\"\r\n                  type=\"number\"\r\n                  value={props.values.numberOfAssistants}\r\n                  onChange={props.handleChange}\r\n                  error={props.touched.email && Boolean(props.errors.email)}\r\n                  helperText={props.touched.email && props.errors.email}\r\n                />\r\n\r\n                <FieldArray\r\n                  name=\"timeOptions\"\r\n                  render={(arrayHelpers) => (\r\n                    <FormControl component=\"fieldset\">\r\n                      <FormLabel component=\"legend\">{props.label}</FormLabel>\r\n                      <FormGroup className=\"CheckBoxes\">\r\n                        {ceremonyTimes.map((time) => {\r\n                          return (\r\n                            <FormControlLabel\r\n                              key={time}\r\n                              control={\r\n                                <Checkbox\r\n                                  name={time}\r\n                                  color=\"secondary\"\r\n                                  onChange={(e) => {\r\n                                    if (e.target.checked) {\r\n                                      arrayHelpers.push(time);\r\n                                    } else {\r\n                                      arrayHelpers.remove(\r\n                                        arrayHelpers.form.values[\r\n                                          props.name\r\n                                        ].reduce((acc, obj, index) => {\r\n                                          if (obj === time) {\r\n                                            acc = index;\r\n                                          }\r\n                                          return acc;\r\n                                        }, 0)\r\n                                      );\r\n                                    }\r\n                                  }}\r\n                                />\r\n                              }\r\n                              labelPlacement=\"end\"\r\n                              label={time}\r\n                            />\r\n                          );\r\n                        })}\r\n                      </FormGroup>\r\n                    </FormControl>\r\n                  )}\r\n                />\r\n              </Form>\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={handleClose} color=\"primary\">\r\n                Cancelar\r\n              </Button>\r\n              <Button color=\"primary\" type=\"submit\" onClick={props.submitForm}>\r\n                Aceptar\r\n              </Button>\r\n            </DialogActions>\r\n          </DialogContent>\r\n        )}\r\n      </Formik>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nconst AdminView = () => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(5);\r\n  const [openNewReservation, setOpenNewReservation] = useState(false);\r\n  const [ceremonies, setCeremonies] = useState([]);\r\n  const [reservations, setReservations] = useState([]);\r\n\r\n  const getCeremonies = useCallback(async () => {\r\n    const cer = await ceremonyApi.getCeremonies();\r\n    return cer;\r\n  }, []);\r\n  const getReservations = useCallback(\r\n    async (id) => await reservationApi.getReservations(id),\r\n    []\r\n  );\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      const resultCeremonies = await getCeremonies();\r\n      setCeremonies(resultCeremonies.data);\r\n    })();\r\n  }, []);\r\n\r\n  const onClickCeremony = async (id) => {\r\n    const resultReservations = await getReservations(id);\r\n    setReservations(resultReservations.data);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const StyledTableCell = withStyles((theme) => ({\r\n    head: {\r\n      backgroundColor: theme.palette.common.black,\r\n      color: theme.palette.common.white,\r\n    },\r\n    body: {\r\n      fontSize: 14,\r\n    },\r\n  }))(TableCell);\r\n\r\n  const StyledTableRow = withStyles((theme) => ({\r\n    root: {\r\n      \"&:nth-of-type(odd)\": {\r\n        backgroundColor: theme.palette.action.hover,\r\n      },\r\n    },\r\n  }))(TableRow);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"AdminHeader\">\r\n        <div className=\"AdminHeaderPanel\">\r\n          <span>Ceremonias PL - Panel de Administración</span>\r\n\r\n          <div>\r\n            {/* <p>Usuario: Admin</p> */}\r\n\r\n            <span\r\n              onClick={() => {\r\n                dispatch(signOut(history));\r\n              }}\r\n            >\r\n              Cerrar Sesión\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"AdminBody\">\r\n        <Paper className=\"Paper CeremoniesPaper\">\r\n          <Fab\r\n            className=\"Fab\"\r\n            color=\"inherit\"\r\n            aria-label=\"add\"\r\n            onClick={() => setOpenNewReservation(true)}\r\n          >\r\n            <AddIcon />\r\n          </Fab>\r\n          <div className=\"CeremoniesGridListRoot\">\r\n            {ceremonies && (\r\n              <GridList className=\"CeremoniesGridList\">\r\n                {ceremonies.map((ceremony, index) => {\r\n                  return (\r\n                    <GridListTile key={index}>\r\n                      <Paper\r\n                        className=\"PaperCeremony\"\r\n                        onClick={() => {\r\n                          onClickCeremony(ceremony.id);\r\n                        }}\r\n                      >\r\n                        <div className=\"PaperCeremonyData\">\r\n                          <Typography variant=\"h5\">{ceremony.name}</Typography>\r\n                          <Typography variant=\"h6\">\r\n                            {moment(ceremony.date).format(\"DD/MM/YYYY\")}\r\n                          </Typography>\r\n                          <div>\r\n                            Cantidad de Asistentes:{\" \"}\r\n                            {ceremony.numberOfAssistants}\r\n                          </div>\r\n                          <div>\r\n                            Horarios:{\" \"}\r\n                            {JSON.stringify(ceremony.timeOptions)\r\n                              .replaceAll('\"', \"\")\r\n                              .replaceAll(\"\\\\\", \"\")\r\n                              .replace(\"[\", \"\")\r\n                              .replace(\"]\", \"\")}\r\n                          </div>\r\n                        </div>\r\n                      </Paper>\r\n                    </GridListTile>\r\n                  );\r\n                })}\r\n              </GridList>\r\n            )}\r\n          </div>\r\n        </Paper>\r\n        <Paper className=\"Paper TablePaper\">\r\n          <TableContainer component={Paper}>\r\n            <Table\r\n              stickyHeader\r\n              aria-label=\"sticky table\"\r\n              className=\"ReservationsTable\"\r\n            >\r\n              <TableHead>\r\n                <TableRow>\r\n                  <StyledTableCell>Nombre</StyledTableCell>\r\n                  <StyledTableCell align=\"right\">Horario</StyledTableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {reservations &&\r\n                  (rowsPerPage > 0\r\n                    ? reservations.slice(\r\n                        page * rowsPerPage,\r\n                        page * rowsPerPage + rowsPerPage\r\n                      )\r\n                    : reservations\r\n                  ).map((row) => (\r\n                    <StyledTableRow key={row.id}>\r\n                      <StyledTableCell component=\"th\" scope=\"row\">\r\n                        {row.name}\r\n                      </StyledTableCell>\r\n                      <StyledTableCell align=\"right\">\r\n                        {row.time}\r\n                      </StyledTableCell>\r\n                    </StyledTableRow>\r\n                  ))}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n          <TablePagination\r\n            rowsPerPageOptions={[5, 10, 25]}\r\n            component=\"div\"\r\n            count={reservations ? reservations.length : 0}\r\n            rowsPerPage={rowsPerPage}\r\n            page={page}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n          />\r\n        </Paper>\r\n      </div>\r\n      <div className=\"AdminFooter\"></div>\r\n\r\n      <NewCeremonyDialog\r\n        open={openNewReservation}\r\n        handleClose={() => {\r\n          setOpenNewReservation(false);\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AdminView;\r\n","import React, { useState, useCallback, useEffect } from \"react\";\r\n\r\nimport {\r\n  Typography,\r\n  Box,\r\n  Button,\r\n  TextField,\r\n  Snackbar,\r\n  Link,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n} from \"@material-ui/core\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport moment from \"moment\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { signIn } from \"../../store/login/loginActions\";\r\n\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nimport { addReservation } from \"../../api/reservation\";\r\nimport \"./ReservationView.scss\";\r\n\r\nimport * as ceremonyApi from \"../../api/ceremony\";\r\n\r\nconst ColorButton = withStyles((theme) => ({\r\n  root: {\r\n    color: \"#ffff\",\r\n    border: \"1px solid #ffff\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"#f1f1f1\",\r\n      color: \"#000\",\r\n    },\r\n    paddingBlock: 30,\r\n    paddingInline: 60,\r\n    margin: 30,\r\n    fontSize: 26,\r\n    fontWeight: 600,\r\n    backdropFilter: \"blur(2px)\",\r\n    backgroundColor: \"rgba(255, 255, 255, 0.2)\",\r\n    \"@media (max-width: 850px)\": {\r\n      paddingBlock: 15,\r\n      paddingInline: 30,\r\n      margin: 15,\r\n      width: \"100%\",\r\n    },\r\n  },\r\n}))(Button);\r\n\r\nconst CssTextField = withStyles({\r\n  root: {\r\n    width: \"90%\",\r\n    \"& label\": {\r\n      color: \"#fff\",\r\n      fontSize: 26,\r\n      transform: \"translate(12px, 29px) scale(1)\",\r\n    },\r\n\r\n    \"& .MuiFilledInput-root\": {\r\n      backgroundColor: \"rgb(0, 0, 0, 0.3)\",\r\n    },\r\n    \"& .MuiFilledInput-underline:after\": {\r\n      borderBottom: \"2px solid #66ccff\",\r\n    },\r\n\r\n    \"& .MuiInputBase-input\": {\r\n      color: \"#fff\",\r\n      fontSize: 32,\r\n    },\r\n    \"& label.Mui-focused\": {\r\n      color: \"#fff\",\r\n      fontSize: 20,\r\n    },\r\n    \"& label.MuiInputLabel-filled\": {\r\n      color: \"#fff\",\r\n      fontSize: 20,\r\n    },\r\n\r\n    \"& .MuiInput-underline:after\": {\r\n      borderBottomColor: \"#fff\",\r\n    },\r\n    \"& .MuiFilledInput-underline:before\": {\r\n      borderBottom: \"1px solid white\",\r\n    },\r\n    \"& .MuiFilledInput-underline-focused:before\": {\r\n      borderBottom: \"1px solid red\",\r\n    },\r\n  },\r\n})(TextField);\r\n\r\nconst LoginDialog = ({ open, handleClose }) => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const { error } = useSelector((state) => state.authentication);\r\n  const [username, setUserName] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  // const auth = useAuth();\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      onClose={handleClose}\r\n      aria-labelledby=\"form-dialog-title\"\r\n    >\r\n      <DialogTitle id=\"form-dialog-title\">Iniciar sesión</DialogTitle>\r\n      <DialogContent>\r\n        {/* <DialogContentText>\r\n            To subscribe to this website, please enter your email address here. We\r\n            will send updates occasionally.\r\n          </DialogContentText> */}\r\n        <form>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"user\"\r\n            label=\"Usuario\"\r\n            fullWidth\r\n            onChange={(event) => {\r\n              setUserName(event.target.value);\r\n            }}\r\n          />\r\n          <TextField\r\n            margin=\"dense\"\r\n            id=\"password\"\r\n            label=\"Contraseña\"\r\n            type=\"password\"\r\n            fullWidth\r\n            onChange={(event) => {\r\n              setPassword(event.target.value);\r\n            }}\r\n          />\r\n        </form>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={handleClose} color=\"primary\">\r\n          Cancelar\r\n        </Button>\r\n        <Button\r\n          onClick={() => {\r\n            dispatch(signIn({ username, password }, history));\r\n          }}\r\n          color=\"primary\"\r\n          type=\"submit\"\r\n        >\r\n          Aceptar\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nconst ReservationView = (props) => {\r\n  const [openLogin, setOpenLogin] = useState(false);\r\n  const [addName, setAddName] = useState(false);\r\n  const [name, setName] = useState(\"\");\r\n  const [time, setTime] = useState(\"\");\r\n  const [reservationSaved, setReservationSaved] = useState(false);\r\n  const [ceremony, setCeremony] = useState(\"\");\r\n  const [availableTimes, setAvailableTimes] = useState([]);\r\n  const [saveResponse, setSaveResponse] = useState({});\r\n\r\n  const getLastCeremony = useCallback(async () => {\r\n    const cer = await ceremonyApi.getLastCeremony();\r\n    return cer;\r\n  }, []);\r\n\r\n  const getAvailableTimes = useCallback(async () => {\r\n    const times = ceremony\r\n      ? await ceremonyApi.getAvailableTimes(ceremony.id)\r\n      : [];\r\n    return times;\r\n  }, [ceremony]);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      const lastCeremony = await getLastCeremony();\r\n      setCeremony(lastCeremony.data);\r\n    })();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      const availableTimes = await getAvailableTimes();\r\n      setAvailableTimes(availableTimes.data);\r\n    })();\r\n  }, [ceremony]);\r\n\r\n  const Alert = (props) => {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n  };\r\n\r\n  const timeSelected = (time) => {\r\n    setAddName(true);\r\n    setTime(time);\r\n  };\r\n\r\n  const handleClose = (_, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    setReservationSaved(false);\r\n  };\r\n\r\n  const confirmReservation = async () => {\r\n    try {\r\n      const result = await addReservation({\r\n        name: name,\r\n        time: time,\r\n        timeStamp: moment(),\r\n        ceremony: ceremony.id,\r\n      });\r\n\r\n      if (result.data.type === \"success\")\r\n        setTimeout(function () {\r\n          window.location.reload();\r\n        }, 2000);\r\n\r\n      setSaveResponse({\r\n        message: result.data.message,\r\n        severity: result.data.type,\r\n      });\r\n      setReservationSaved(true);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"Reservations\">\r\n        <Typography className=\"CeremonyName\" variant=\"h1\">\r\n          {ceremony.name}\r\n        </Typography>\r\n\r\n        <div className=\"TimeBox\">\r\n          {addName ? (\r\n            <Box className=\"NameContainer\">\r\n              <Typography variant=\"h3\">\r\n                Complete su nombre y confirme\r\n              </Typography>\r\n              <CssTextField\r\n                id=\"name\"\r\n                label=\"Nombre\"\r\n                variant=\"filled\"\r\n                onChange={(event) => {\r\n                  setName(event.target.value);\r\n                }}\r\n              />\r\n              <Box className=\"NameButtons\">\r\n                <Button\r\n                  variant=\"contained\"\r\n                  onClick={() => {\r\n                    setAddName(false);\r\n                  }}\r\n                >\r\n                  Atras\r\n                </Button>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  className=\"Confirm\"\r\n                  onClick={confirmReservation}\r\n                >\r\n                  Confirmar\r\n                </Button>\r\n              </Box>\r\n            </Box>\r\n          ) : (\r\n            <>\r\n              {availableTimes &&\r\n                availableTimes.message &&\r\n                availableTimes.message\r\n                  .split(\".\")\r\n                  .map((element) => (\r\n                    <Typography variant=\"h3\">{element}</Typography>\r\n                  ))}\r\n\r\n              {availableTimes && !availableTimes.message && (\r\n                <div className=\"TimeContainer\">\r\n                  <Typography variant=\"h3\">\r\n                    ¿En que horario usted desea participar?\r\n                  </Typography>\r\n                  <Box className=\"Buttons\">\r\n                    {availableTimes.map((element, index) => (\r\n                      <ColorButton\r\n                        key={index}\r\n                        disabled={!element.available}\r\n                        onClick={() => {\r\n                          timeSelected(element.time);\r\n                        }}\r\n                      >\r\n                        {element.time}\r\n                      </ColorButton>\r\n                    ))}\r\n                  </Box>\r\n                </div>\r\n              )}\r\n            </>\r\n          )}\r\n        </div>\r\n\r\n        <footer className=\"Footer\">\r\n          <div style={{ paddingInline: \"10px\" }}>Subsede Liniers</div>\r\n          <div style={{ paddingInline: \"10px\" }}>\r\n            {\" \"}\r\n            <Link\r\n              href=\"#\"\r\n              onClick={() => {\r\n                setOpenLogin(true);\r\n              }}\r\n            >\r\n              Iniciar sesion\r\n            </Link>{\" \"}\r\n          </div>\r\n        </footer>\r\n      </div>\r\n      <LoginDialog\r\n        open={openLogin}\r\n        handleClose={() => {\r\n          setOpenLogin(false);\r\n        }}\r\n      />\r\n\r\n      <Snackbar\r\n        anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\r\n        open={reservationSaved}\r\n        autoHideDuration={3000}\r\n        onClose={handleClose}\r\n      >\r\n        <Alert onClose={handleClose} severity={saveResponse.severity}>\r\n          {saveResponse.message}\r\n        </Alert>\r\n      </Snackbar>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ReservationView;\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nexport const UserRoute = ({ component, path, ...rest }) => {\r\n  const { currentUser } = useSelector((state) => state.authentication);\r\nconsole.log(useSelector((state) => state.authentication))\r\n  return currentUser !== null ? (\r\n    <Route exact path={path} component={component} {...rest} />\r\n  ) : (\r\n    <Redirect to={\"/\"} />\r\n  );\r\n};\r\n\r\nexport default UserRoute;","import React, { useState, useEffect, useContext, createContext } from \"react\";\r\nimport { login } from \"../api/login\";\r\n\r\nconst authContext = createContext();\r\n\r\nconst baseUrl = process.env.REACT_APP_BASE_URL;\r\n\r\nexport const ProvideAuth = ({ children }) => {\r\n  const auth = useProvideAuth();\r\n  return <authContext.Provider value={auth}> {children} </authContext.Provider>;\r\n};\r\n\r\nexport const useAuth = () => useContext(authContext);\r\n\r\nconst useProvideAuth = () => {\r\n  const [user, setUser] = useState(null);\r\n  \r\n  \r\n  const signin = async (credentials) => {\r\n    \r\n    const response = await login(credentials)\r\n    setUser(response.user)\r\n\r\n\r\n    // fetch(baseUrl + \"login\", {\r\n    //   method: \"POST\",\r\n    //   credentials: \"include\",\r\n    //   headers: {\r\n    //     \"Content-Type\": \"application/json\",\r\n    //     Accepts: \"application/json\",\r\n    //   },\r\n    //   body: JSON.stringify(credentials),\r\n    // })\r\n    //   .then((res) => res.json())\r\n    //   .then((json) => setUser(json.user));\r\n  };\r\n \r\n  useEffect(() => {\r\n    //check authentication\r\n  }, []);\r\n \r\n  return {\r\n    user,\r\n    signin,\r\n  };\r\n};\r\n","import \"./App.scss\";\r\n\r\nimport React, { useState } from \"react\";\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Switch,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\n\r\nimport AdminView from \"./components/AdminView/AdminView\";\r\nimport ReservationView from \"./components/ReservationView/ReservationView\";\r\nimport PrivateRoute from './components/privateRoute'\r\n\r\nimport { ProvideAuth, useAuth } from \"./hooks/auth.js\";\r\n\r\nfunction App() {\r\n  // const [token, setToken] = useState();\r\n\r\n  // function PrivateRoute({ children, ...rest }) {\r\n  //   // const auth = useAuth();\r\n  //   return (\r\n  //     <Route\r\n  //       {...rest}\r\n  //       render={({ location }) =>\r\n  //         auth.user ? (\r\n  //           children\r\n  //         ) : (\r\n  //           <Redirect to={{ pathname: \"/\", state: { from: location } }} />\r\n  //         )\r\n  //       }\r\n  //     />\r\n  //   );\r\n  // }\r\n\r\n  return (\r\n    <>\r\n      {/* <ProvideAuth> */}\r\n        <Router>\r\n          <Switch>\r\n            <PrivateRoute path=\"/admin\">\r\n              <AdminView  />\r\n            </PrivateRoute>\r\n\r\n            <Route path=\"/\">\r\n              <ReservationView />\r\n            </Route>\r\n          </Switch>\r\n        </Router>\r\n      {/* </ProvideAuth> */}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import jwt from \"jsonwebtoken\";\r\n\r\nexport const isValidToken = (token) => {\r\n  let decoded = jwt.decode(token);\r\n  return new Date(decoded.exp * 1000) > new Date() ? decoded : null;\r\n};\r\n","// import jwt from \"jsonwebtoken\";\r\nimport {isValidToken} from '../utils'\r\n\r\nimport {\r\n  SIGN_IN_FAILURE,\r\n  SIGN_IN_REQUEST,\r\n  SIGN_IN_SUCCESS,\r\n  SIGN_UP_FAILURE,\r\n  SIGN_UP_REQUEST,\r\n  SIGN_UP_SUCCESS,\r\n  SIGN_OUT_FAILURE,\r\n  SIGN_OUT_REQUEST,\r\n  SIGN_OUT_SUCCESS,\r\n} from \"./login-action-types\";\r\n\r\n// export const isValidToken = (token) => {\r\n//   let decoded = jwt.decode(token);\r\n//   return new Date(decoded.exp * 1000) > new Date() ? decoded : null;\r\n// };\r\n\r\nconst initState = {\r\n  currentUser: localStorage.getItem(\"USER-TOKEN\")\r\n    ? isValidToken(localStorage.getItem(\"USER-TOKEN\"))\r\n    : null,\r\n  token: localStorage.getItem(\"USER-TOKEN\")\r\n    ? localStorage.getItem(\"USER-TOKEN\")\r\n    : null,\r\n  error: \"\",\r\n  loading: false,\r\n  isAuthenticated: false,\r\n};\r\n\r\nconst authenticationReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case SIGN_IN_REQUEST:\r\n    case SIGN_UP_REQUEST:\r\n    case SIGN_OUT_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        isAuthenticated: false,\r\n      };\r\n    case SIGN_IN_FAILURE:\r\n    case SIGN_UP_FAILURE:\r\n    case SIGN_OUT_FAILURE:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload,\r\n        currentUser: null,\r\n        isAuthenticated: false,\r\n      };\r\n    case SIGN_UP_SUCCESS:\r\n    case SIGN_IN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        token: action.payload.token,\r\n        currentUser: action.payload.user,\r\n        isAuthenticated: true,\r\n      };\r\n    case SIGN_OUT_SUCCESS:\r\n      localStorage.removeItem(\"USER-TOKEN\");\r\n      return {\r\n        ...state,\r\n        isAuthenticated: false,\r\n        loading: false,\r\n        currentUser: null,\r\n        token: \"\",\r\n      };\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n\r\nexport default authenticationReducer;","import { applyMiddleware, createStore, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { combineReducers } from \"redux\";\r\n\r\nimport authentication from \"./login/loginReducer\";\r\nimport {isValidToken} from './utils'\r\n\r\nconst createRootReducer = () =>\r\n  combineReducers({\r\n    authentication,\r\n  });\r\n\r\nconst initState = {\r\n  authentication: {\r\n    currentUser: localStorage.getItem(\"USER-TOKEN\")\r\n    ? isValidToken(localStorage.getItem(\"USER-TOKEN\"))\r\n    : null,\r\n    token: localStorage.getItem(\"USER-TOKEN\"),\r\n    error: \"\",\r\n    loading: false,\r\n    isAuthenticated: false,\r\n  },\r\n};\r\n\r\nconst makeStore = (initialState = initState) => {\r\n  let composeEnhancers = compose;\r\n  const middlewares = [thunk];\r\n\r\n  // if (process.env.NODE_ENV === \"development\") {\r\n  //   if (window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) {\r\n  //     composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__;\r\n  //   }\r\n  // }\r\n\r\n  const store = createStore(\r\n    createRootReducer(),\r\n    initialState,\r\n    composeEnhancers(applyMiddleware(...middlewares))\r\n  );\r\n\r\n  // if (module.hot) {\r\n  //   module.hot.accept(\"./login/loginReducer\", () => {\r\n  //     const nextReducer = require(\"./login/loginReducer\").default;\r\n  //     store.replaceReducer(nextReducer);\r\n  //   });\r\n  // }\r\n  return store;\r\n};\r\n\r\nexport default makeStore;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.scss\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nimport { Provider } from \"react-redux\";\r\nimport makeStore from \"./store/store\";\r\n\r\nconst store = makeStore();\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <React.StrictMode>\r\n      <App />\r\n    </React.StrictMode>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}